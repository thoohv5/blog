syntax = "proto3";

package wechat.v1.base;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "thooh/api/wechat/v1/base";

// 微信.
service WeChat {
    // 二维码.
    rpc QRCode (QRCodeReq) returns (QRCodeResp)  {
        option (google.api.http) = {
            get: "/wechat/v1/base/qr-code"
        };
    }
    // 二维码结果
    rpc CheckQRCode (CheckQRCodeReq) returns (CheckQRCodeResp) {
        option (google.api.http) = {
            get: "/wechat/v1/base/check-qr-code"
        };
    }
}

// 二维码 请求.
message QRCodeReq {
    // 二维码有效时间，以秒为单位。 最大不超过2592000（即30天），此字段如果不填，则默认有效期为30秒。
    int32 expire_seconds = 1[(validate.rules).int32 = { gt:0, lte:2592000 }];
    
    enum ActionName {
        // 临时的整型参数值
        QR_SCENE = 0;
        // 临时的字符串参数值
        QR_STR_SCENE = 1;
        // 永久的整型参数值
        QR_LIMIT_SCENE = 2;
        // 永久的字符串参数值
        QR_LIMIT_STR_SCENE = 3;
    }
    // 二维码类型
    ActionName action_name = 2;
    
    // 场景值ID，临时二维码时为32位非0整型，永久二维码时最大值为100000（目前参数只支持1--100000）
    int32 scene_id = 3[(validate.rules).int32 = { gte:0, lte:100000 }];
    // 场景值ID（字符串形式的ID），字符串类型，长度限制为1到64
    string scene_str = 4[(validate.rules).string = { min_len:0, max_len:64 }];
}

// 二维码 返回值.
message QRCodeResp {
    // 二维码
    string qr_code = 1;
}

// 二维码结果 请求
message CheckQRCodeReq {
    string key = 1;
}
// 二维码结果 返回值
message CheckQRCodeResp {
    bool result = 2;
    string extra = 3;
}