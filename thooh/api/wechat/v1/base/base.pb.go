// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.4
// source: api/wechat/v1/base/base.proto

package base

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QRCodeReq_ActionName int32

const (
	// 临时的整型参数值
	QRCodeReq_QR_SCENE QRCodeReq_ActionName = 0
	// 临时的字符串参数值
	QRCodeReq_QR_STR_SCENE QRCodeReq_ActionName = 1
	// 永久的整型参数值
	QRCodeReq_QR_LIMIT_SCENE QRCodeReq_ActionName = 2
	// 永久的字符串参数值
	QRCodeReq_QR_LIMIT_STR_SCENE QRCodeReq_ActionName = 3
)

// Enum value maps for QRCodeReq_ActionName.
var (
	QRCodeReq_ActionName_name = map[int32]string{
		0: "QR_SCENE",
		1: "QR_STR_SCENE",
		2: "QR_LIMIT_SCENE",
		3: "QR_LIMIT_STR_SCENE",
	}
	QRCodeReq_ActionName_value = map[string]int32{
		"QR_SCENE":           0,
		"QR_STR_SCENE":       1,
		"QR_LIMIT_SCENE":     2,
		"QR_LIMIT_STR_SCENE": 3,
	}
)

func (x QRCodeReq_ActionName) Enum() *QRCodeReq_ActionName {
	p := new(QRCodeReq_ActionName)
	*p = x
	return p
}

func (x QRCodeReq_ActionName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QRCodeReq_ActionName) Descriptor() protoreflect.EnumDescriptor {
	return file_api_wechat_v1_base_base_proto_enumTypes[0].Descriptor()
}

func (QRCodeReq_ActionName) Type() protoreflect.EnumType {
	return &file_api_wechat_v1_base_base_proto_enumTypes[0]
}

func (x QRCodeReq_ActionName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QRCodeReq_ActionName.Descriptor instead.
func (QRCodeReq_ActionName) EnumDescriptor() ([]byte, []int) {
	return file_api_wechat_v1_base_base_proto_rawDescGZIP(), []int{0, 0}
}

// 二维码 请求.
type QRCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 二维码有效时间，以秒为单位。 最大不超过2592000（即30天），此字段如果不填，则默认有效期为30秒。
	ExpireSeconds int32 `protobuf:"varint,1,opt,name=expire_seconds,json=expireSeconds,proto3" json:"expire_seconds,omitempty"`
	// 二维码类型
	ActionName QRCodeReq_ActionName `protobuf:"varint,2,opt,name=action_name,json=actionName,proto3,enum=wechat.v1.base.QRCodeReq_ActionName" json:"action_name,omitempty"`
	// 场景值ID，临时二维码时为32位非0整型，永久二维码时最大值为100000（目前参数只支持1--100000）
	SceneId int32 `protobuf:"varint,3,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	// 场景值ID（字符串形式的ID），字符串类型，长度限制为1到64
	SceneStr string `protobuf:"bytes,4,opt,name=scene_str,json=sceneStr,proto3" json:"scene_str,omitempty"`
}

func (x *QRCodeReq) Reset() {
	*x = QRCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wechat_v1_base_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeReq) ProtoMessage() {}

func (x *QRCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_wechat_v1_base_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeReq.ProtoReflect.Descriptor instead.
func (*QRCodeReq) Descriptor() ([]byte, []int) {
	return file_api_wechat_v1_base_base_proto_rawDescGZIP(), []int{0}
}

func (x *QRCodeReq) GetExpireSeconds() int32 {
	if x != nil {
		return x.ExpireSeconds
	}
	return 0
}

func (x *QRCodeReq) GetActionName() QRCodeReq_ActionName {
	if x != nil {
		return x.ActionName
	}
	return QRCodeReq_QR_SCENE
}

func (x *QRCodeReq) GetSceneId() int32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *QRCodeReq) GetSceneStr() string {
	if x != nil {
		return x.SceneStr
	}
	return ""
}

// 二维码 返回值.
type QRCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 二维码
	QrCode string `protobuf:"bytes,1,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`
}

func (x *QRCodeResp) Reset() {
	*x = QRCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wechat_v1_base_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeResp) ProtoMessage() {}

func (x *QRCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_wechat_v1_base_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeResp.ProtoReflect.Descriptor instead.
func (*QRCodeResp) Descriptor() ([]byte, []int) {
	return file_api_wechat_v1_base_base_proto_rawDescGZIP(), []int{1}
}

func (x *QRCodeResp) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

// 二维码结果 请求
type CheckQRCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CheckQRCodeReq) Reset() {
	*x = CheckQRCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wechat_v1_base_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckQRCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckQRCodeReq) ProtoMessage() {}

func (x *CheckQRCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_wechat_v1_base_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckQRCodeReq.ProtoReflect.Descriptor instead.
func (*CheckQRCodeReq) Descriptor() ([]byte, []int) {
	return file_api_wechat_v1_base_base_proto_rawDescGZIP(), []int{2}
}

func (x *CheckQRCodeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 二维码结果 返回值
type CheckQRCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckQRCodeResp) Reset() {
	*x = CheckQRCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_wechat_v1_base_base_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckQRCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckQRCodeResp) ProtoMessage() {}

func (x *CheckQRCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_wechat_v1_base_base_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckQRCodeResp.ProtoReflect.Descriptor instead.
func (*CheckQRCodeResp) Descriptor() ([]byte, []int) {
	return file_api_wechat_v1_base_base_proto_rawDescGZIP(), []int{3}
}

func (x *CheckQRCodeResp) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_wechat_v1_base_base_proto protoreflect.FileDescriptor

var file_api_wechat_v1_base_base_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x09, 0x51, 0x52, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xfa, 0x42,
	0x09, 0x1a, 0x07, 0x18, 0x80, 0x9a, 0x9e, 0x01, 0x20, 0x00, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0xa0, 0x8d, 0x06, 0x28, 0x00, 0x52,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x00, 0x18, 0x40, 0x52, 0x08, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x74, 0x72,
	0x22, 0x58, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x51, 0x52, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x51, 0x52, 0x5f, 0x53, 0x54, 0x52, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x51, 0x52, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x51, 0x52, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x53,
	0x54, 0x52, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x03, 0x22, 0x25, 0x0a, 0x0a, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x22, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xe1, 0x01, 0x0a, 0x06, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x60, 0x0a, 0x06, 0x51,
	0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x75, 0x0a,
	0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x71, 0x72, 0x2d,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x74, 0x68, 0x6f, 0x6f, 0x68, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_wechat_v1_base_base_proto_rawDescOnce sync.Once
	file_api_wechat_v1_base_base_proto_rawDescData = file_api_wechat_v1_base_base_proto_rawDesc
)

func file_api_wechat_v1_base_base_proto_rawDescGZIP() []byte {
	file_api_wechat_v1_base_base_proto_rawDescOnce.Do(func() {
		file_api_wechat_v1_base_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_wechat_v1_base_base_proto_rawDescData)
	})
	return file_api_wechat_v1_base_base_proto_rawDescData
}

var file_api_wechat_v1_base_base_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_wechat_v1_base_base_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_wechat_v1_base_base_proto_goTypes = []interface{}{
	(QRCodeReq_ActionName)(0), // 0: wechat.v1.base.QRCodeReq.ActionName
	(*QRCodeReq)(nil),         // 1: wechat.v1.base.QRCodeReq
	(*QRCodeResp)(nil),        // 2: wechat.v1.base.QRCodeResp
	(*CheckQRCodeReq)(nil),    // 3: wechat.v1.base.CheckQRCodeReq
	(*CheckQRCodeResp)(nil),   // 4: wechat.v1.base.CheckQRCodeResp
}
var file_api_wechat_v1_base_base_proto_depIdxs = []int32{
	0, // 0: wechat.v1.base.QRCodeReq.action_name:type_name -> wechat.v1.base.QRCodeReq.ActionName
	1, // 1: wechat.v1.base.WeChat.QRCode:input_type -> wechat.v1.base.QRCodeReq
	3, // 2: wechat.v1.base.WeChat.CheckQRCode:input_type -> wechat.v1.base.CheckQRCodeReq
	2, // 3: wechat.v1.base.WeChat.QRCode:output_type -> wechat.v1.base.QRCodeResp
	4, // 4: wechat.v1.base.WeChat.CheckQRCode:output_type -> wechat.v1.base.CheckQRCodeResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_wechat_v1_base_base_proto_init() }
func file_api_wechat_v1_base_base_proto_init() {
	if File_api_wechat_v1_base_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_wechat_v1_base_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wechat_v1_base_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wechat_v1_base_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckQRCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_wechat_v1_base_base_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckQRCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_wechat_v1_base_base_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_wechat_v1_base_base_proto_goTypes,
		DependencyIndexes: file_api_wechat_v1_base_base_proto_depIdxs,
		EnumInfos:         file_api_wechat_v1_base_base_proto_enumTypes,
		MessageInfos:      file_api_wechat_v1_base_base_proto_msgTypes,
	}.Build()
	File_api_wechat_v1_base_base_proto = out.File
	file_api_wechat_v1_base_base_proto_rawDesc = nil
	file_api_wechat_v1_base_base_proto_goTypes = nil
	file_api_wechat_v1_base_base_proto_depIdxs = nil
}
